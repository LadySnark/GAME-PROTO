<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization
grav = .55;
jumpspeed = 5;
movespeed = 3;
health = 5;
hspeed = 0;
vspeed = 0;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Movement
//Player Input
var key_right = 0;
var key_left = 0;
var key_jump = 0;

if (keyboard_check(vk_right) or keyboard_check(ord("D")))
{
    key_right = 1;
    if (place_meeting(x,y+1,obj_ground_parent))
    {
        sprite_index = spr_player_right;
        image_speed = .18;
    }
}
if (keyboard_check(vk_left) or keyboard_check(ord("A")))
{
    key_left = 1;
    if (place_meeting(x,y+1,obj_ground_parent))
    {
        sprite_index = spr_player_left;
        image_speed = .18;
    }
}
if (keyboard_check(vk_space))
{
    key_jump = 1;
}

//Responding to Player Input
move = -key_left + key_right;

hspeed = move * movespeed;
if (vspeed &lt; 10) vspeed += grav;
if (place_meeting(x,y+1,obj_ground_parent))
{
    vspeed = key_jump * -jumpspeed;
}

if (vspeed != 0)
{
    if (hspeed &gt; 3) 
    {
        hspeed = 3;
    }
}

//Horizontal Collision
//With the use of parent objects, using a grass mask becomes kind of redundant
if (place_meeting(x+hspeed, y, obj_ground_parent)) 
{
    while(!place_meeting(x+sign(hspeed),y, obj_ground_parent))
    {
        x += sign(hspeed);
    }
    hspeed = 0;
}
x += hspeed;
//Vertical Collision
//Right now, we have an issue of sometimes landing 1 px above the ground and getting temporarily stuck
if (place_meeting(x,y+vspeed, obj_ground_parent))
{
    while(!place_meeting(x,y+sign(vspeed),obj_ground_parent))
        {
            y += sign(vspeed);
        }
        vspeed = 0;
    }

y += vspeed;

//Jump Animation
if (key_jump)
{
    if (key_left)
    {
        sprite_index = spr_player_jump_left;
//        show_message("left") this message shows up but the left jump anim doesn't play :&lt;
    }

    if (key_right)
    {
        sprite_index = spr_player_jump_right;
        //jump right animation seems fine
    }
    else
    {
        sprite_index = spr_player_jump_up;
    }
}
if (key_left)
{
    if (key_jump)
    {
        sprite_index = spr_player_jump_left;
    }
}
if (key_right)
{
    if (key_jump)
    {
        sprite_index = spr_player_jump_right;
    }
}
//Stop Animation
if (vspeed == 0 and hspeed == 0)
{
    sprite_index = spr_player;
}
//Next: a fall animation
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
